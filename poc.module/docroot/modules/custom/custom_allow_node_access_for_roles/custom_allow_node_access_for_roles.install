<?php

/**
 * @file
 * Custom Allow Node Access for Roles..
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 */
function custom_allow_node_access_for_roles_install() {
  $target_field = 'allow_node_access_for_roles';
  $config = [
    'label' => t('Access Permission'),
    'description' => t('Can be hidden by unchecking the user.'),
  ];
  $available_roles = _custom_allow_node_access_for_roles_get_available_roles();
  foreach ([
    'page_contenttype',
    'story',
  ] as $type) {
    $field_storage = FieldStorageConfig::loadByName('node', $target_field);
    $field = FieldConfig::loadByName('node', $type, $target_field);
    if (empty($field)) {
      $field = FieldConfig::create([
        'field_storage' => $field_storage,
        'bundle' => $type,
        'label' => $config['label'],
        'description' => $config['description'],
        'translatable' => FALSE,
        'default_value' => $available_roles,
      ]);
      $field->save();

      /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
      $display_repository = \Drupal::service('entity_display.repository');
      $bundle_form_display = $display_repository->getFormDisplay('node', $type);

      // Assign widget settings for the default form mode.
      $field_langcode = $bundle_form_display->getComponent('langcode');
      $weight = (int) ($field_langcode['weight'] ?? -2);
      $bundle_form_display->setComponent($target_field, [
        'type' => 'options_buttons',
        'weight' => $weight + 1,
        'region' => 'content',
      ])->save();
    }
  }
  node_access_needs_rebuild(TRUE);
  node_access_rebuild(TRUE);
}

/**
 * Implements hook_uninstall().
 */
function custom_allow_node_access_for_roles_uninstall() {
  node_access_needs_rebuild(TRUE);
  node_access_rebuild(TRUE);
}
